version: '3.4'

services:
  mongo_source:
    container_name: mongo_source
    image: mongo:4.4
    volumes:
      - ./scripts/rs-init.sh:/scripts/rs-init.sh
      - ./scripts/init.js:/scripts/init.js
    networks:
      - localnet
    ports:
      - "27017:27017"
    depends_on:
      - mongo_target
    links:
      - mongo_target
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]

  mongo_target:
    container_name: mongo_target
    image: mongo:4.4
    networks:
      - localnet
    ports:
      - "27018:27017"
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
    networks:
      - localnet

  kafka:
    container_name: kafka
    image: confluentinc/cp-enterprise-kafka:5.3.0
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    networks:
      - localnet
    depends_on:
      - zookeeper

  debezium_connect:
    container_name: debezium_connect
    image: quay.io/debezium/connect:2.1
    restart: always
    ports:
      - "8083:8083"
    links:
      - kafka
      - mongo_source
    environment:
      - BOOTSTRAP_SERVERS=kafka:29092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    networks:
      - localnet
    depends_on:
      - kafka

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: true
    volumes:
      - ./scripts/config.yml:/etc/kafkaui/dynamic_config.yaml
    networks:
      - localnet

networks:
  localnet:
    attachable: true